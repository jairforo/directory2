
@import "../../../@common/common.less";

.bgCustomColorType3() when (iscolor(@bg-color))			{ padding-top: 30px; padding-bottom: 30px; .elm-search-form { background-color: @bg-color; } .elm-wrapper { padding-top: 40px; } }
.bgCustomColorSearch() when not (iscolor(@bg-color))	{ border: none; }
.bgCustomColorSearch() when (iscolor(@bg-color))		{ background: none; }
.bgDarkenSearch() when (iscolor(@bg-color))				{ background-color: darken(@bg-color, 3%); }
.buttonColor() when (iscolor(@buttonColor))				{ background: @buttonColor; border: none; }
.respBck() when (iscolor(@responsiveBck))				{ background: @responsiveBck; }

#@{el}-main { background: none; }

#@{el}{

	.bgCustomColor();
	.bgCustomImage();
	background-repeat: @bg-repeat;
	background-attachment: @bg-scroll;
	background-position: @bg-position;

}

/*.elements-sidebar-wrap #@{el} 	{ .user-spaces; }*/

.search-form-type-3 #@{el}-main
{
	.bgCustomColorType3();
	
	.elm-maindesc 			{ .txtCustomColor(); }
	.category-search-wrap, 
	.location-search-wrap, 
	.radius 				{ .bgCustomColorSearch(); .buttonColor(); }
}

.search-form-type-3 .search-collapsed #@{el}-main 	{ .respBck(); }
@media all and (max-width: 640px)					{ .search-form-type-3 .header-layout #@{el}-main {.respBck();} }

.@{el}{
	clear:both;
}


